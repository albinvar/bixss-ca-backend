version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:${MONGO_VERSION:-7.0}
    container_name: bixss_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-ca_management}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - bixss_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bixss_backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DATABASE:-ca_management}?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE:-7d}
      JWT_REFRESH_EXPIRE: ${JWT_REFRESH_EXPIRE:-30d}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - bixss_network

  # Frontend (Next.js)
  frontend:
    build:
      context: ../bixss-ca-frontend
      dockerfile: Dockerfile
    container_name: bixss_frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
    depends_on:
      - backend
    networks:
      - bixss_network

volumes:
  mongodb_data:
    driver: local

networks:
  bixss_network:
    driver: bridge
